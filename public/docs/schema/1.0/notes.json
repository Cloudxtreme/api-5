{
    "basePath": "https://devapi.cloudwalkers.be",
    "swaggerVersion": "1.2",
    "apiVersion": "1",
    "resourcePath": "/notes",
    "apis": [
        {
            "path": "/notes",
            "description": "Operations on notes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get notes from ids",
                    "nickname": "getData",
                    "type": "NotesOutput",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "ids",
                            "type": "string",
                            "required": true,
                            "description": "Only get the notes with given ids (comma separated list)"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/notes/{noteId}",
            "description": "Operations on notes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get a single note",
                    "nickname": "Note_0",
                    "type": "NoteOutput",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "noteId",
                            "type": "integer",
                            "required": true,
                            "description": "Note id"
                        }
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Delete a single note",
                    "nickname": "Note_1",
                    "type": "DeleteResult",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "noteId",
                            "type": "integer",
                            "required": true,
                            "description": "Note id"
                        }
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Update a single note",
                    "nickname": "Note_2",
                    "type": "NoteOutput",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "noteId",
                            "type": "integer",
                            "required": true,
                            "description": "Note id"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/notes/{noteId}/related",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get related notes",
                    "nickname": "Note",
                    "type": "NoteOutput",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "noteId",
                            "type": "integer",
                            "required": true,
                            "description": "Note id"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/notes/{noteId}/relatedids",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get related notes",
                    "nickname": "Note",
                    "type": "NoteOutput",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "noteId",
                            "type": "integer",
                            "required": true,
                            "description": "Note id"
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "NotesOutput": {
            "id": "NotesOutput",
            "properties": {
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "Note"
                    }
                }
            },
            "required": [
                "notes"
            ]
        },
        "Note": {
            "id": "Note",
            "description": "Class Note",
            "properties": {
                "user": {
                    "$ref": "UserSimple"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "identifier": {
                    "$ref": "Identifier"
                }
            },
            "required": [
                "date",
                "id",
                "text"
            ]
        },
        "UserSimple": {
            "id": "UserSimple",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "displayname": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "required": [
                "avatar",
                "displayname",
                "email",
                "firstname",
                "id",
                "name"
            ]
        },
        "Identifier": {
            "id": "Identifier",
            "description": "Class Identifier\r \r This class acts like a model, but is actually just a placeholder.\r It is used to identify models without loading them completely.",
            "properties": {
                "objectType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "NoteOutput": {
            "id": "NoteOutput",
            "properties": {
                "note": {
                    "$ref": "Note"
                }
            },
            "required": [
                "note"
            ]
        },
        "DeleteResult": {
            "id": "DeleteResult",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            },
            "required": [
                "success"
            ]
        }
    }
}